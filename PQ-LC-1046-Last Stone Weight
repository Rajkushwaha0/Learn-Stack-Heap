class Solution {
    public int lastStoneWeight(int[] stones) {
        if(stones.length==1) return stones[0];
        PriorityQueue<Integer> max = new PriorityQueue<>((e,f)->f-e);
        for(int i=0;i<stones.length;i++){
            max.add(stones[i]);
        }
        int a=0,b=0;
        while(!max.isEmpty()){
            if(max.size()==1) break;
            a=max.poll();
            b=max.poll();
            if(a>b) max.add(a-b);
        }
        if(max.size()==0) return 0;
        return max.poll();
    }
}
