class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        if(k== nums.length) return nums;
        Map<Integer,Integer> hm = new HashMap<>();
        for(int i=0;i<nums.length;i++){
            hm.put(nums[i],hm.getOrDefault(nums[i],0)+1);
        }
        int[] ans = new int[k];
        PriorityQueue<Integer> min = new PriorityQueue<>((e1,e2)->hm.get(e1)-hm.get(e2));
        for(Integer e : hm.keySet()){
            min.add(e);
            if(min.size()>k){
                min.poll();
            }
        }
        int l=0;
        while(!min.isEmpty()){
            ans[l++]=min.poll();
        }
        return ans;
    }
}
